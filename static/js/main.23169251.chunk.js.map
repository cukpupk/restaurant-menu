{"version":3,"sources":["Home.js","Table.js","Categories.js","App.js","serviceWorker.js","index.js"],"names":["Home","Table","setTable","name","description","props","data","this","map","React","Component","Categories","handleClick","index","setState","info","fetch","state","ss","then","response","json","item","selected","selectedIndex","list","obj","short_name","key","onClick","bind","App","to","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"+RAwBeA,MAtBf,WACE,OACE,6BACE,4BAAK,oBACL,uEAEE,6BAFF,wBAIE,6BAJF,sBAME,6BANF,sDAQE,6BARF,6BAUE,6BAVF,mCAYE,gC,QCgBOC,E,2MA/BbC,SAAW,YAA4B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAClB,GAAwB,OAApB,EAAKC,MAAMF,KACf,OACE,+BACE,4BACE,4BAAKA,GACL,4BAAKC,M,wEAOX,IAAME,EAAOC,KAAKF,MAAMC,KACxB,OACE,oDACuBC,KAAKF,MAAMF,KADlC,IAEE,+BACE,+BACE,4BACE,oCACA,6CAGHG,GAAQA,EAAKE,IAAID,KAAKL,gB,GAzBbO,IAAMC,WC2EXC,E,YAzEb,WAAYN,GAAQ,IAAD,8BACjB,4CAAMA,KAuBRO,YAAc,SAAAC,GACZ,EAAKC,SAAS,CACZC,KAAM,KAERC,MAAM,kEAAD,OAED,EAAKC,MAAMC,GAAGL,KAGfM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAa,IAAD,uBAChB,YAAiBA,EAAjB,+CAA2B,CAAC,IAAnBE,EAAkB,QACrBnB,EAAOmB,EAAKnB,KACdC,EAAckB,EAAKlB,YACrB,EAAKU,SAAS,CACZC,KAAK,GAAD,mBAAM,EAAKE,MAAMF,MAAjB,CAAuB,CAAEZ,OAAMC,oBALvB,sFAUpB,EAAKU,SAAS,CACZS,SAAU,EAAKN,MAAMC,GAAGL,GACxBW,cAAeX,KA5CjB,EAAKI,MAAQ,CACXQ,KAAM,GACNP,GAAI,GACJH,KAAM,GACNQ,SAAU,KACVC,cAAe,GAPA,E,iFAWE,IAAD,OAClBR,MAAM,8DACHG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAa,IAAD,uBAChB,YAAgBA,EAAhB,+CAA0B,CAAC,IAAlBM,EAAiB,QACxB,EAAKZ,SAAS,CACZW,KAAK,GAAD,mBAAM,EAAKR,MAAMQ,MAAjB,CAAuBC,EAAIvB,OAC/Be,GAAG,GAAD,mBAAM,EAAKD,MAAMC,IAAjB,CAAqBQ,EAAIC,gBAJf,wF,+BAoCZ,IAAD,OACP,OACE,6BACE,+CACA,4BACGpB,KAAKU,MAAMQ,KAAKjB,KAAI,SAACc,EAAMT,GAC1B,OACE,wBAAIe,IAAKN,EAAMO,QAAS,EAAKjB,YAAYkB,KAAK,EAAMjB,IACjDS,EADH,OACa,EAAKL,MAAMC,GAAGL,GAD3B,SAMN,kBAAC,EAAD,CACEP,KAAMC,KAAKU,MAAMF,KACjBZ,KAAMI,KAAKU,MAAMM,SACjBV,MAAON,KAAKU,MAAMO,qB,GAnEHf,IAAMC,WC0BhBqB,G,uLArBX,OACE,6BACE,4BAAK,uCACL,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMC,GAAG,KACP,yCAEF,kBAAC,IAAD,CAAMA,GAAG,eACP,+CAGF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWlC,EAAMmC,OAAK,IACtC,kBAAC,IAAD,CAAOF,KAAK,cAAcC,UAAWvB,EAAYwB,OAAK,W,GAfhD1B,IAAMC,YCMJ0B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5B,MAAK,SAAA6B,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.23169251.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <h3>{\"LOCATION & HOURS\"}</h3>\r\n      <p>\r\n        1067 N San Antonio Rd Los Altos, CA 94022\r\n        <br />\r\n        Phone: (650) 948-2696\r\n        <br />\r\n        Fax: (650) 948-0121\r\n        <br />\r\n        Sunday – Thursday – 11:30am – 9:30pm\r\n        <br />\r\n        Friday 11:30am – 10pm\r\n        <br />\r\n        Saturday 12pm (noon) – 10pm\r\n        <br />\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nclass Table extends React.Component {\r\n  setTable = ({ name, description }) => {\r\n    if (this.props.name === null) return;\r\n    return (\r\n      <tbody>\r\n        <tr>\r\n          <td>{name}</td>\r\n          <td>{description}</td>\r\n        </tr>\r\n      </tbody>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const data = this.props.data;\r\n    return (\r\n      <div>\r\n        Items in Category: ({this.props.name})\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Description</th>\r\n            </tr>\r\n          </tbody>\r\n          {data && data.map(this.setTable)}\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport Table from \"./Table\";\r\n\r\nclass Categories extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      list: [],\r\n      ss: [],\r\n      info: [],\r\n      selected: null,\r\n      selectedIndex: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(`https://stream-restaurant-menu-svc.herokuapp.com/category/`)\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        for (let obj of response) {\r\n          this.setState({\r\n            list: [...this.state.list, obj.name],\r\n            ss: [...this.state.ss, obj.short_name]\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  handleClick = index => {\r\n    this.setState({\r\n      info: []\r\n    });\r\n    fetch(\r\n      `https://stream-restaurant-menu-svc.herokuapp.com/item?category=${\r\n        this.state.ss[index]\r\n      }`\r\n    )\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        for (let item of response) {\r\n          let name = item.name,\r\n            description = item.description;\r\n          this.setState({\r\n            info: [...this.state.info, { name, description }]\r\n          });\r\n        }\r\n      });\r\n\r\n    this.setState({\r\n      selected: this.state.ss[index],\r\n      selectedIndex: index\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Menu Categories</h3>\r\n        <ul>\r\n          {this.state.list.map((item, index) => {\r\n            return (\r\n              <li key={item} onClick={this.handleClick.bind(this, index)}>\r\n                {item} - ({this.state.ss[index]})\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n        <Table\r\n          data={this.state.info}\r\n          name={this.state.selected}\r\n          index={this.state.selectedIndex}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Categories;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Categories from \"./Categories\";\nimport \"./styles.css\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <h3>{\"1. Welcome to Chef Chu's Restaurant\"}</h3>\n        <Router>\n          <Link to=\"/\">\n            <button>Home</button>\n          </Link>\n          <Link to=\"/Categories\">\n            <button>Categories</button>\n          </Link>\n\n          <Switch>\n            <Route path=\"/\" component={Home} exact />\n            <Route path=\"/Categories\" component={Categories} exact />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}